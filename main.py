import telebot

# –∏–º–ø–æ—Ä—Ç types –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
from telebot import types

from functions_for_database import print_free_table, booking_tables
# –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–º .env
from dotenv import load_dotenv
import os
from os.path import join, dirname


def get_from_env(key):
    """
    –ü–æ–ª—É—á–∞–µ–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º–±–æ—Ç–∞ –∏–∑ .env —Ñ–∞–π–ª–∞
    """
    dotenv_path = join(dirname(__file__), 'token.env')
    load_dotenv(dotenv_path)
    return os.environ.get(key)


token = get_from_env('TG_BOT_TOKEN')

bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start', 'hello'])  # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
def main(message):
    bot.send_message(message.chat.id,
                     f'–ü—Ä–∏–≤–µ—Ç! {message.from_user.first_name},'
                     f' —è –í–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—é —Å—Ç–æ–ª–æ–≤ –≤ –í–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö')
    markup = types.InlineKeyboardMarkup()
    btn1_restaurant1 = types.InlineKeyboardButton('–ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å üçî', callback_data='–ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å')
    btn2_restaurant2 = types.InlineKeyboardButton('KFC üçó', callback_data='KFC')
    markup.row(btn1_restaurant1, btn2_restaurant2)
    bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫', reply_markup=markup)


# —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–∞–∫ –∏ –∫—Ñ—Å
@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == '–ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å':
        bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å')
        # –í—ã–≤–æ–¥–∏—Ç —Ç–∞–±–ª–∏—Ü—É —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ç–æ–ª–æ–≤
        bot.send_message(callback.message.chat.id, print_free_table('table_McDonald', 'table_booking_McDonald'))
    elif callback == 'KFC':
        pass  # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ª–æ–≤ kfc


@bot.message_handler(commands=['booking_table'])  # –æ—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è
def booking_table(message):
    markup = types.InlineKeyboardMarkup()  # —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏ –º–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å –∏ –∫—Ñ—Å
    btn1_restaurant1 = types.InlineKeyboardButton('–ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å üçî', callback_data='–ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å')
    btn2_restaurant2 = types.InlineKeyboardButton('KFC üçó', callback_data='KFC')
    markup.row(btn1_restaurant1, btn2_restaurant2)
    bot.send_message(message.chat.id,
                     f'–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def number_booking_table(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é booking_table
    :param message: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å)
    """
    if message.text in ('1', '2', '3', '4', '5', '6', '7', '8', '9'):
        booking_tables(message)
        bot.reply_to(message, f'–°—Ç–æ–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω')


if __name__ == '__main__':
    bot.polling(none_stop=True)  # —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç —Ç–∞–∫, —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –ø–æ—Å—Ç–æ—è–Ω–Ω–æ


